    using Almanna;
    using Gee;
    namespace Parchment.Model.DB.Implementation {
    	
    	/**
    	 * Almanna Implementation for class "Entry".
    	 * Generated by almanna-generate.
    	 */
    	public class Entry : Parchment.Model.DB.Entity.Entry {
    		public Publisher publisher { get; set; }
    		public ArrayList<EntryTag> entry_tags { get; set; }
    
    		public override void register_entity() {
    			base.register_entity();
    
    			add_has_one( "publisher", "publisher_id", "publisher_id" );
    			add_has_many( "entry_tags", typeof(EntryTag), "entry_id", "entry_id" );
    		}

            /**
             * Constructor to automatically set date_created to now when
             * instantiated.
             */
            public Entry() {
                base();
                this.date_created = new DateTime.now_local();
            }

            /**
             * Override save to set date_modified on every update.
             */
            public override void save() {
                this.date_modified = new DateTime.now_local();
                base.save();
            }
    	}
    }
    