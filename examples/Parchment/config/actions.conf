#
# The actions configuration determines how requests are processed through the
# application. All three columns must be complete for an action to be parsed,
# and can be separated with spaces or tabs.
#
# A path will always start with /, and will be parsed almost literally. You may
# add named captures by surrounding them with brackets, [ and ]. For example,
# /foo/bar/[page] will match /foo/bar/ and then send the value after the URL as
# a named capture in state. Ending a URL with * will capture the rest of the URL
# as arguments, for example, /foo/bar/*.
#
# A regex will always start and end with /, and all / characters will need to be
# escaped with a backslash (\).
#
# Methods can be any valid value from the HttpMethod enum, but the most common
# will be GET, POST, HEAD, PUT, and DELETE. Multiple methods can be used by
# separating with commas, but you may want to use the opportunity to have
# different methods handle different types of requests.
#
# The target chain is one or more methods to handle a request. To declare a
# method to handle the request, provide the namespace (if the namespace is
# deeper than Controller), class name, and method name, separated with dots.
# Most of the time, especially as the application is put together, only one
# method will be used. However, if there are components that can handle a
# certain part of the URL, or will be using shared code, multiple methods can be
# chained together to handle a request. To use that functionality, separate
# methods with commas.
#
# Path/Regex                      Methods  Target Chain
# =============================== ======== ============
# /example/path                   GET,POST Root.begin, Root.index

/                                 GET      Entries.list
/page/[page]                      GET      Entries.list
/entries/[entry_id]               GET      Entries.view
/admin/login                      GET,POST Admin.login
/admin/logout                     GET      Admin.logout
/admin/entry                      GET,POST Admin.check_user, Admin.entry
/admin/profile                    GET,POST Admin.check_user, Admin.profile
/admin                            GET,POST Admin.check_user, Admin.dashboard